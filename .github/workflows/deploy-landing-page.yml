name: Deploy Landing Page to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare landing page for deployment
        run: |
          # Copy landing page files to a deployment directory
          mkdir -p _site
          cp -r landing-page/* _site/
          
          # Create .nojekyll to prevent Jekyll processing
          touch _site/.nojekyll
          
          # Update any placeholder URLs with the actual GitHub Pages URL
          REPO_NAME="${{ github.repository }}"
          REPO_OWNER="${{ github.repository_owner }}"
          PAGES_URL="https://${REPO_OWNER}.github.io/${REPO_NAME#*/}"
          
          echo "Landing page configured for: ${PAGES_URL}"
          echo "Files prepared:"
          ls -la _site/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4